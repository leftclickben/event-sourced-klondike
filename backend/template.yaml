AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless, event-sourced "Patience" solitaire card game

Parameters:
  Stage:
    Type: String
    Default: dev
    Description: Name of the stage

Globals:
  Function:
    Runtime: nodejs12.x
    Tracing: Active
  Api:
    TracingEnabled: true
    MethodSettings:
      - LoggingLevel: INFO
        DataTraceEnabled: true
        ResourcePath: '/*'
        HttpMethod: '*'

Resources:
  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs

  Account:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn

  GetGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/handlers/http/game
      Handler: get.handler
      Environment:
        Variables:
          DB_TABLE_EVENTS: !Ref EventsTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref EventsTable
      Events:
        GetGame:
          Type: Api
          Properties:
            Path: /game/{gameId}
            Method: get

  PostGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/handlers/http/game
      Handler: post.handler
      Environment:
        Variables:
          DB_TABLE_EVENTS: !Ref EventsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
      Events:
        GetGame:
          Type: Api
          Properties:
            Path: /game
            Method: post

  PatchGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/handlers/http/game
      Handler: patch.handler
      Environment:
        Variables:
          DB_TABLE_EVENTS: !Ref EventsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
      Events:
        GetGame:
          Type: Api
          Properties:
            Path: /game/{gameId}/{moveType}
            Method: patch

  DeleteGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/handlers/http/game
      Handler: delete.handler
      Environment:
        Variables:
          DB_TABLE_EVENTS: !Ref EventsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
      Events:
        GetGame:
          Type: Api
          Properties:
            Path: /game/{gameId}
            Method: delete

  EventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "patience_events_${Stage}"
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: gameId
          KeyType: HASH
        - AttributeName: eventTimestamp
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: gameId
          AttributeType: S
        - AttributeName: eventTimestamp
          AttributeType: N

Outputs:
  ApiBaseUrl:
    Description: "API Gateway endpoint base URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  EventsTableName:
    Description: "Name of the events table"
    Value: !Ref EventsTable
